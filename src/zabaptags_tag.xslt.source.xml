<?sap.transform simple?>
<tt:transform
  xmlns:tt="http://www.sap.com/transformation-templates"
  xmlns:ddic="http://www.sap.com/abapxml/types/dictionary"
  xmlns:atm="http://www.devepos.com/adt/atm">

  <tt:root name="tag" type="ddic:zabaptags_tag_data"/>

  <tt:template>
    <tt:apply name="tag">
      <tt:with-root name="tag" ref="tag"/>
    </tt:apply>
  </tt:template>

  <tt:template name="tag">
    <tt:context>
      <tt:root name="tag"/>
    </tt:context>
    <atm:tag tt:extensible="deep">
      <!-- serialize some scalar properties of the tag -->
      <tt:cond s-check="not-initial(tag.tag_id)">
        <tt:attribute name="atm:id" option="format(guid)" value-ref="tag.tag_id"/>
      </tt:cond>
      <tt:cond s-check="not-initial(tag.name)">
        <tt:attribute name="atm:name" value-ref="tag.name"/>
      </tt:cond>
      <tt:cond s-check="not-initial(tag.description)">
        <tt:attribute name="atm:description" value-ref="tag.description"/>
      </tt:cond>
      <tt:cond s-check="not-initial(tag.owner)">
        <tt:attribute name="atm:owner" value-ref="tag.owner"/>
      </tt:cond>
      <tt:cond s-check="not-initial(tag.created_by)">
        <tt:attribute name="atm:createdBy" value-ref="tag.created_by"/>
      </tt:cond>
      <tt:cond s-check="not-initial(tag.created_date_time)">
        <tt:attribute name="atm:createdDateTime" option="format(dateTimeLocal)" value-ref="tag.created_date_time"/>
      </tt:cond>
      <tt:cond s-check="not-initial(tag.changed_by)">
        <tt:attribute name="atm:changedBy" value-ref="tag.changed_by"/>
      </tt:cond>
      <tt:cond s-check="not-initial(tag.changed_date_time)">
        <tt:attribute name="atm:changedDateTime" option="format(dateTimeLocal)" value-ref="tag.changed_date_time"/>
      </tt:cond>
      <tt:cond s-check="not-initial(tag.tagged_object_count)">
        <tt:attribute name="atm:taggedObjectCount" value-ref="tag.tagged_object_count"/>
      </tt:cond>
      <tt:cond s-check="not-initial(tag.parent_tag_id)">
        <tt:attribute name="atm:parentTagId" option="format(guid)" value-ref="tag.parent_tag_id"/>
      </tt:cond>
      <tt:cond s-check="not-initial(tag.is_changed)">
        <tt:attribute name="atm:changed" option="format(boolean)" value-ref="tag.is_changed"/>
      </tt:cond>
      <tt:cond s-check="not-initial(tag.is_shared)">
        <tt:attribute name="atm:shared" option="format(boolean)" value-ref="tag.is_shared"/>
      </tt:cond>

      <!-- Serialize child tags -->
      <tt:call-method class="zcl_abaptags_adt_tags_serlzer" d-name="deserialize" reader="reader" s-name="serialize" writer="writer">
        <tt:with-parameter name="tag" ref="TAG"/>
        <tt:with-parameter name="transformation_name" val="C('ZABAPTAGS_TAG')"/>
      </tt:call-method>
    </atm:tag>
  </tt:template>

  <tt:template name="tags">
    <tt:context>
      <tt:root name="tags" type="ddic:zabaptags_tag_data_t"/>
    </tt:context>
    <tt:cond check="not-initial(tags)">
      <tt:loop ref="tags">
        <tt:apply name="tag">
          <tt:with-root name="tag" ref="$ref"/>
        </tt:apply>
      </tt:loop>
    </tt:cond>
  </tt:template>

</tt:transform>
